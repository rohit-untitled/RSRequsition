"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Util = void 0;
const util = require("./util/");
/**
 * Util module encapsulating various utility methods, classes, etc.
 *
 * ```javascript
 * import { Util } from '@oracle/bots-node-sdk';
 * // or
 * import * as Util from '@oracle/bots-node-sdk/util';
 * ```
 */
var Util;
(function (Util) {
    /**
     * MessageModel is a set of utility functions to help deriving string or speech representation
     * of a CMM (Conversation Message Model) message.  This is used primarily to output text or speech to
     * voice and text-based channels like Alexa and SMS.
     * @alias `messageModelUtil`
     */
    Util.MessageModel = {
        cardToText: util.messageModelUtil.cardToText,
        convertRespToText: util.messageModelUtil.convertRespToText,
    };
    Util.messageModelUtil = util.messageModelUtil; // preferred, but not picked up by TypeDoc.
    /**
     * Webhook is a set of utility functions for bot integration via webhook channel.
     * @alias `webhookUtil`
     */
    Util.Webhook = {
        messageToBot: util.webhookUtil.messageToBot,
        messageToBotWithProperties: util.webhookUtil.messageToBotWithProperties,
        verifyMessageFromBot: util.webhookUtil.verifyMessageFromBot,
        bodyParserRawMessageVerify: util.webhookUtil.bodyParserRawMessageVerify,
        buildSignatureHeader: util.webhookUtil.buildSignatureHeader,
    };
    Util.webhookUtil = util.webhookUtil; // preferred, but not picked up by TypeDoc.
    /**
     * Text is a set of text-based utiltiies for bot message processing.
     * @alias `textUtil`
     */
    Util.Text = {
        approxTextMatch: util.textUtil.approxTextMatch,
    };
    Util.textUtil = util.textUtil; // preferred, but not picked up by TypeDoc.
})(Util = exports.Util || (exports.Util = {}));
