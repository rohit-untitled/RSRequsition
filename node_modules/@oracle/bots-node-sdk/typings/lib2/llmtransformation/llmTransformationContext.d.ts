import { Logger } from '../../common/definitions';
/**
 * The Bots LlmTransformationContext is a class with convenience methods for transforming the request and response of LLM REST services
 * </p>
 * A LlmTransformationContext class instance is passed as an argument to every rest service event handler function.
 * @memberof module:Lib
 * @alias LlmTransformationContext
 */
export declare class LlmTransformationContext {
    protected readonly _request: any;
    protected readonly _response: any;
    protected readonly _logger: Logger;
    private _llmTransformationContext;
    /**
     * Constructor of rest service context.
     * DO NOT USE - INSTANCE IS ALREADY PASSED TO EVENT HANDLERS
     * @param {object} request
     */
    constructor(request: any);
    /**
     * Retrieves the request object.
     * @return {object} The request object.
     */
    getRequest(): any;
    /**
     * Retrieves the response object.
     * @return {object} The response object.
     */
    getResponse(): any;
    /**
     * Retrieves the logger object.
     * @return {object} The logger object.
     */
    logger(): Logger;
    /**
     * Returns the name of the REST service method
     * @return {string} method name
     */
    getMethod(): string;
    /**
     * Returns REST service URL
     * @return the URL
     */
    getEndPoint(): string;
    /**
     * Returns the request  payload
     * @return the payload
     */
    getRequestPayload(): any;
    /**
     * Set the request payload
     */
    setRequestPayload(payload: any): void;
    /**
     * Returns the response payload
     * @return the payload
     */
    getResponsePayload(): any;
    /**
     * Set the response payload
     */
    setResponsePayload(payload: any): void;
}
