import { EditableField } from '../internal';
/**
 * Represents a toggle field.
 * @extends EditableField
 */
export declare class ToggleField extends EditableField {
    readonly displayType: string;
    private valueOn;
    private valueOff;
    private defaultValue?;
    private labelOn?;
    private labelOff?;
    /**
     * Creates an instance of the ToggleField class.
     * @param {string} id The unique identifier of the field.
     * @param {string} label The label of the field.
     * @param {any} valueOff The value when the toggle is off.
     * @param {any} valueOn The value when the toggle is on.
     */
    constructor(id: string, label: string, valueOff: any, valueOn: any);
    /**
     * Gets the valueOn of the field.
     * @returns {any} The valueOn of the field.
     */
    getValueOn(): any;
    /**
     * Sets the valueOn of the field.
     * @param {any} valueOn The valueOn to set.
     * @returns The updated instance of the ToggleField.
     */
    setValueOn(valueOn: any): this;
    /**
     * Gets the valueOff of the field.
     * @returns {any} The valueOff of the field.
     */
    getValueOff(): any;
    /**
     * Sets the valueOff of the field.
     * @param {any} valueOff The valueOff to set.
     * @returns The updated instance of the ToggleField.
     */
    setValueOff(valueOff: any): this;
    /**
     * Gets the defaultValue of the field.
     * @returns {any} The defaultValue of the field.
     */
    getDefaultValue(): any;
    /**
     * Sets the defaultValue of the field.
     * @param {any} defaultValue The defaultValue to set.
     * @returns The updated instance of the ToggleField.
     */
    setDefaultValue(defaultValue: any): this;
    /**
     * Gets the labelOn of the field.
     * @returns {string} The labelOn of the field.
     */
    getLabelOn(): string;
    /**
     * Sets the labelOn of the field. This label is used to create a radio button when the channel does not support a toggle field.
     * @param {string} labelOn The labelOn to set.
     * @returns The updated instance of the ToggleField.
     */
    setLabelOn(labelOn: string): this;
    /**
     * Gets the labelOff of the field.
     * @returns {string} The labelOff of the field.
     */
    getLabelOff(): string;
    /**
     * Sets the labelOff of the field. This label is used to create a radio button when the channel does not support a toggle field.
     * @param {string} labelOff The labelOff to set.
     * @returns The updated instance of the ToggleField.
     */
    setLabelOff(labelOff: string): this;
}
