"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Margin = exports.FontWeight = exports.FontSize = exports.Field = void 0;
const internal_1 = require("../internal");
/**
 * Represents an abstract field.
 * @extends ChannelCustomizable
 */
class Field extends internal_1.ChannelCustomizable {
    /**
     * Gets the label of the field.
     * @returns {string} The label of the field.
     */
    getLabel() {
        return this.label;
    }
    /**
     * Sets the label of the field.
     * @param {string} label The label of the field.
     * @returns This Field instance.
     */
    setLabel(label) {
        this.label = label;
        return this;
    }
    /**
     * Gets the ID of the field.
     * @returns {string} The ID of the field.
     */
    getId() {
        return this.id;
    }
    /**
     * Sets the ID of the field.
     * @param {string} id The ID of the field.
     * @returns This Field instance.
     */
    setId(id) {
        this.id = id;
        return this;
    }
    /**
     * Gets the margin top value of the field.
     * @returns The margin top value of the field.
     */
    getMarginTop() {
        return this.marginTop;
    }
    /**
     * Sets the margin top value of the field.
     * @param marginTop The margin top value of the field.
     * @returns This Field instance.
     */
    setMarginTop(marginTop) {
        this.marginTop = marginTop;
        return this;
    }
    /**
     * Gets the label font size of the field.
     * @returns The label font size of the field.
     */
    getLabelFontSize() {
        return this.labelFontSize;
    }
    /**
     * Sets the label font size of the field.
     * @param labelFontSize The label font size of the field.
     * @returns This Field instance.
     */
    setLabelFontSize(labelFontSize) {
        this.labelFontSize = labelFontSize;
        return this;
    }
    /**
     * Gets the label font weight of the field.
     * @returns The label font weight of the field.
     */
    getLabelFontWeight() {
        return this.labelFontWeight;
    }
    /**
     * Sets the label font weight of the field.
     * @param labelFontWeight The label font weight of the field.
     * @returns This Field instance.
     */
    setLabelFontWeight(labelFontWeight) {
        this.labelFontWeight = labelFontWeight;
        return this;
    }
}
exports.Field = Field;
/**
 * Represents the font size options for a field.
 */
var FontSize;
(function (FontSize) {
    FontSize["small"] = "small";
    FontSize["medium"] = "medium";
    FontSize["large"] = "large";
})(FontSize = exports.FontSize || (exports.FontSize = {}));
/**
 * Represents the font weight options for a field.
 */
var FontWeight;
(function (FontWeight) {
    FontWeight["light"] = "light";
    FontWeight["medium"] = "medium";
    FontWeight["bold"] = "bold";
})(FontWeight = exports.FontWeight || (exports.FontWeight = {}));
/**
 * Represents the margin options for a field.
 */
var Margin;
(function (Margin) {
    Margin["none"] = "none";
    Margin["medium"] = "medium";
    Margin["large"] = "large";
})(Margin = exports.Margin || (exports.Margin = {}));
