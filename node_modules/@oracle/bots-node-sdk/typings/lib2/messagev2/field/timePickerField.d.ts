import { EditableField } from '../internal';
/**
 * Represents a time picker field.
 * @extends EditableField
 */
export declare class TimePickerField extends EditableField {
    readonly displayType: string;
    private minTime?;
    private maxTime?;
    private defaultValue?;
    /**
     * Creates an instance of the TimePickerField class.
     * @param {string} id The unique identifier of the field.
     * @param {string} label The label of the field.
     */
    constructor(id: string, label: string);
    /**
     * Gets the minTime value of the field.
     * @returns {string} The minTime value of the field.
     */
    getMinTime(): string;
    /**
     * Sets the minTime value of the field. Time format should be hh:mm.
     * @param {string} minTime The minTime value to set, using format hh:mm.
     * @returns The updated instance of the TimePickerField.
     */
    setMinTime(minTime: string): this;
    /**
     * Gets the maxTime value of the field.
     * @returns {string} The maxTime value of the field.
     */
    getMaxTime(): string;
    /**
     * Sets the maxTime value of the field. Time format should be hh:mm.
     * @param {string} maxTime The maxTime value to set, using format hh:mm.
     * @returns The updated instance of the TimePickerField.
     */
    setMaxTime(maxTime: string): this;
    /**
     * Gets the defaultValue value of the field.
     * @returns {string} The defaultValue value of the field.
     */
    getDefaultValue(): string;
    /**
     * Sets the defaultValue value of the field.
     * @param {string} defaultValue The defaultValue value to set.
     * @returns The updated instance of the TimePickerField.
     */
    setDefaultValue(defaultValue: string): this;
}
