import { EditableField, SelectFieldOption } from '../internal';
/**
 * Represents the layout style for a single select field.
 */
export declare enum SingleSelectLayoutStyle {
    list = "list",
    radioGroup = "radioGroup"
}
/**
 * Represents a single select field.
 * @extends EditableField
 */
export declare class SingleSelectField extends EditableField {
    readonly displayType: string;
    private options;
    private defaultValue?;
    private layoutStyle;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates an instance of the SingleSelectField class.
     * @param {string} id The unique identifier of the field.
     * @param {string} label The label of the field.
     * @param {SelectFieldOption[]} options The options to of the field.
     */
    constructor(id: string, label: string, options?: SelectFieldOption[]);
    /**
     * Gets the options of the field.
     * @returns {SelectFieldOption[]} The options of the field.
     */
    getOptions(): SelectFieldOption[];
    /**
     * Sets the options of the field.
     * @param {SelectFieldOption[]} options The options to set.
     * @returns The updated instance of the SingleSelectField.
     */
    setOptions(options: SelectFieldOption[]): this;
    /**
     * Add an option.
     * @param {SelectFieldOption} option The option to add.
     * @returns The updated instance of the SingleSelectField.
     */
    addOption(option: SelectFieldOption): this;
    /**
     * Gets the default value of the field.
     * @returns {any} The default value of the field.
     */
    getDefaultValue(): any;
    /**
     * Sets the default value of the field.
     * @param {any} defaultValue The default value to set.
     * @returns The updated instance of the SingleSelectField.
     */
    setDefaultValue(defaultValue: any): this;
    /**
     * Gets the layout style of the field.
     * @returns {SingleSelectLayoutStyle} The layout style of the field.
     */
    getLayoutStyle(): SingleSelectLayoutStyle;
    /**
     * Sets the layout style of the field.
     * @param {SingleSelectLayoutStyle} layoutStyle The layout style to set.
     * @returns The updated instance of the SingleSelectField.
     */
    setLayoutStyle(layoutStyle: SingleSelectLayoutStyle): this;
}
