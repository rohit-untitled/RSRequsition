import { EditableField, SelectFieldOption } from '../internal';
/**
 * Represents the layout style of a multi-select field.
 */
export declare enum MultiSelectLayoutStyle {
    list = "list",
    checkboxes = "checkboxes"
}
/**
 * Represents a multi-select field.
 * @extends EditableField
 */
export declare class MultiSelectField extends EditableField {
    readonly displayType: string;
    private defaultValue?;
    private options;
    private layoutStyle;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates an instance of the MultiSelectField class.
     * @param {string} id The unique identifier of the field.
     * @param {string} label The label of the field.
     * @param {SelectFieldOption[]} options The options to of the field.
     */
    constructor(id: string, label: string, options?: SelectFieldOption[]);
    /**
     * Gets the default value.
     * @returns {object[]} The default value.
     */
    getDefaultValue(): Object[];
    /**
     * Sets the default value.
     * @param {object[]} defaultValue The default value to set.
     * @returns The updated instance of the MultiSelectField.
     */
    setDefaultValue(defaultValue: Object[]): this;
    /**
     * Gets the options.
     * @returns {SelectFieldOption[]} The options.
     */
    getOptions(): SelectFieldOption[];
    /**
     * Sets the options.
     * @param {SelectFieldOption[]} options The options to set.
     * @returns The updated instance of the MultiSelectField.
     */
    setOptions(options: SelectFieldOption[]): this;
    /**
     * Add an option.
     * @param {SelectFieldOption} option The option to add.
     * @returns The updated instance of the MultiSelectField.
     */
    addOption(option: SelectFieldOption): this;
    /**
     * Gets the layout style.
     * @returns {MultiSelectLayoutStyle} The layout style.
     */
    getLayoutStyle(): MultiSelectLayoutStyle;
    /**
     * Sets the layout style.
     * @param {MultiSelectLayoutStyle} layoutStyle The layout style to set.
     * @returns The updated instance of the MultiSelectField.
     */
    setLayoutStyle(layoutStyle: MultiSelectLayoutStyle): this;
}
