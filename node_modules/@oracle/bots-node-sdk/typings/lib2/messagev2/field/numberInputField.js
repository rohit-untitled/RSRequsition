"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberInputField = void 0;
const internal_1 = require("../internal");
/**
 * Represents a number input field.
 * @extends EditableField
 */
class NumberInputField extends internal_1.EditableField {
    /**
     * Creates an instance of the NumberInputField class.
     * @param {string} id The unique identifier of the field.
     * @param {string} label The label of the field.
     */
    constructor(id, label) {
        super(id);
        this.displayType = 'numberInput';
        this.setLabel(label);
    }
    /**
     * Gets the maximum value of the field.
     * @returns {number} The maximum value of the field.
     */
    getMaxValue() {
        return this.maxValue;
    }
    /**
     * Sets the maximum value of the field.
     * @param {number} maxValue The maximum value to set.
     * @returns The updated instance of the NumberInputField.
     */
    setMaxValue(maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    /**
     * Gets the minimum value of the field.
     * @returns {number} The minimum value of the field.
     */
    getMinValue() {
        return this.minValue;
    }
    /**
     * Sets the minimum value of the field.
     * @param {number} minValue The minimum value to set.
     * @returns The updated instance of the NumberInputField.
     */
    setMinValue(minValue) {
        this.minValue = minValue;
        return this;
    }
    /**
     * Gets the default value of the field.
     * @returns {number} The default value of the field.
     */
    getDefaultValue() {
        return this.defaultValue;
    }
    /**
     * Sets the default value of the field.
     * @param {number} defaultValue The default value to set.
     * @returns The updated instance of the NumberInputField.
     */
    setDefaultValue(defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
}
exports.NumberInputField = NumberInputField;
