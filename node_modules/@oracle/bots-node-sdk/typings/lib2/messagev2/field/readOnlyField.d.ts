import { Field, FieldAlignment } from '../internal';
/**
 * Represents a read-only field.
 * @extends Field
 */
export declare abstract class ReadOnlyField extends Field {
    private value?;
    private width?;
    private alignment?;
    /**
     * Gets the value of the read-only field.
     * @returns {any} The value of the field.
     */
    getValue(): any;
    /**
     * Sets the value of the read-only field.
     * @param {any} value The value to set.
     * @returns The current instance of the ReadOnlyField class.
     */
    setValue(value: any): this;
    /**
     * Gets the width of the read-only field.
     * @returns {number} The width value.
     */
    getWidth(): number;
    /**
     * Sets the width of the read-only field.
     * @param {number} width The width value to set.
     * @returns The current instance of the ReadOnlyField class.
     */
    setWidth(width: number): this;
    /**
     * Gets the alignment of the read-only field.
     * @returns {FieldAlignment} The alignment value.
     */
    getAlignment(): FieldAlignment;
    /**
     * Sets the alignment of the read-only field.
     * @param {FieldAlignment} alignment The alignment value to set.
     * @returns The current instance of the ReadOnlyField class.
     */
    setAlignment(alignment: FieldAlignment): this;
}
