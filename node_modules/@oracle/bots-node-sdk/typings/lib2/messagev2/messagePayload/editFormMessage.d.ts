import { NonRawMessage, Field, FormRow } from '../internal';
/**
 * Represents an edit form message.
 * @extends NonRawMessage
 */
export declare class EditFormMessage extends NonRawMessage {
    readonly type: string;
    private title?;
    private formColumns;
    private fields;
    private formRows;
    private errorMessage?;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates an instance of the EditFormMessage class.
     * @param {Field[]} fields The list of fields in the edit form message.
     */
    constructor(fields?: Field[]);
    /**
     * Gets the title of the edit form message.
     * @returns {string} The title of the edit form message.
     */
    getTitle(): string;
    /**
     * Sets the title of the edit form message.
     * @param {string} title The title to set.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    setTitle(title: string): this;
    /**
     * Gets the number of form columns in the edit form message.
     * @returns {number} The number of form columns in the edit form message.
     */
    getFormColumns(): number;
    /**
     * Sets the number of form columns in the edit form message.
     * @param {number} formColumns The number of form columns to set.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    setFormColumns(formColumns: number): this;
    /**
     * Gets the list of fields in the edit form message.
     * @returns {Field[]} The list of fields in the edit form message.
     */
    getFields(): Field[];
    /**
     * Sets the fields of the edit form message.
     * @param {Field[]} fields The fields to set.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    setFields(fields: Field[]): this;
    /**
     * Adds a field to the edit form message.
     * @param {Field} field The field to add.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    addField(field: Field): this;
    /**
     * Gets the list of form rows in the edit form message.
     * @returns {FormRow[]} The list of form rows in the edit form message.
     */
    getFormRows(): FormRow[];
    /**
     * Sets the form rows of the edit form message.
     * @param {FormRow[]} formRows The form rows to set.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    setFormRows(formRows: FormRow[]): this;
    /**
     * Adds a form row to the edit form message.
     * @param {FormRow} formRow The form row to add.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    addFormRow(formRow: FormRow): this;
    /**
     * Gets the error message of the edit form message.
     * @returns {string} The error message of the edit form message.
     */
    getErrorMessage(): string;
    /**
     * Sets the error message of the edit form message.
     * @param {string} errorMessage The error message to set.
     * @returns {EditFormMessage} The updated instance of the EditFormMessage.
     */
    setErrorMessage(errorMessage: string): this;
}
