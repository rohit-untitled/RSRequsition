import { NonRawMessage, Action, Voice, ChannelCustomizable } from '../internal';
/**
 * Represents the layout of a card.
 */
export declare enum CardLayout {
    horizontal = "horizontal",
    vertical = "vertical"
}
/**
 * Represents a card message.
 * @extends NonRawMessage
 */
export declare class CardMessage extends NonRawMessage {
    readonly type: string;
    private layout;
    private cards;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates a new card message.
     * @param {Card[]} cards The cards of the message.
     * @returns {CardMessage} A new instance of the CardMessage.
     */
    constructor(cards?: Card[]);
    /**
     * Gets the layout of the card message.
     * @returns {CardLayout} The layout of the card message.
     */
    getLayout(): CardLayout;
    /**
     * Sets the layout of the card message.
     * @param {CardLayout} layout The layout of the card message.
     * @returns {CardMessage} This card message instance.
     */
    setLayout(layout: CardLayout): this;
    /**
     * Gets the list of cards in the card message.
     * @returns {Card[]} The list of cards in the card message.
     */
    getCards(): Card[];
    /**
     * Sets the cards of the card message.
     * @param {Card[]} cards The cards of the card message.
     * @returns {CardMessage} This card message instance.
     */
    setCards(cards: Card[]): this;
    /**
     * Adds a card to the card message.
     * @param {Card} card The card to add.
     * @returns {CardMessage} This card message instance.
     */
    addCard(card: Card): this;
}
/**
 * Represents a card.
 * @extends ChannelCustomizable
 */
export declare class Card extends ChannelCustomizable {
    private id;
    private title;
    private description;
    private voice;
    private imageUrl;
    private url;
    private actions;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Constructs a Card object with the specified title.
     * @param {string} title The title of the card (required).
     */
    constructor(title: string);
    /**
     * Gets the ID of the card.
     * @returns {string} The ID of the card.
     */
    getId(): string;
    /**
     * Sets the ID of the card.
     * @param {string} id The ID of the card.
     * @returns {Card} This Card instance.
     */
    setId(id: string): this;
    /**
     * Gets the title of the card.
     * @returns {string} The title of the card.
     */
    getTitle(): string;
    /**
     * Sets the title of the card.
     * @param {string} title The title of the card.
     * @returns {Card} This Card instance.
     */
    setTitle(title: string): this;
    /**
     * Gets the description of the card.
     * @returns {string} The description of the card.
     */
    getDescription(): string;
    /**
     * Sets the description of the card.
     * @param {string} description The description of the card.
     * @returns {Card} This Card instance.
     */
    setDescription(description: string): this;
    /**
     * Gets the voice settings of the card.
     * @returns {Voice} the voice settings of the card.
     */
    getVoice(): Voice;
    /**
     * Sets the voice settings of the card.
     * @param {Voice} voice the voice settings of the card.
     * @returns {Card} This Card instance.
     */
    setVoice(voice: Voice): this;
    /**
     * Gets the image URL of the card.
     * @returns {string} The image URL of the card.
     */
    getImageUrl(): string;
    /**
     * Sets the image URL of the card.
     * @param {string} imageUrl The image URL of the card.
     * @returns {Card} This Card instance.
     */
    setImageUrl(imageUrl: string): this;
    /**
     * Gets the URL of the card.
     * @returns {string} The URL of the card.
     */
    getUrl(): string;
    /**
     * Sets the URL of the card.
     * @param {string} url The URL of the card.
     * @returns {Card} This Card instance.
     */
    setUrl(url: string): this;
    /**
     * Gets the actions of the card.
     * @returns {Action[]} The actions of the card.
     */
    getActions(): Action[];
    /**
     * Adds an action to the card.
     * @param {Action} action The action to add.
     * @returns {Card} This Card instance.
     */
    addAction(action: Action): this;
}
