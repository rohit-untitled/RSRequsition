import { CommandMessage } from '../internal';
/**
 * Represents an execute application action command message.
 * This message is used in co-pilot where this message is sent from the skill to the client to trigger a specific action in a
 * page, e.g. updateing fields.
 *
 * @extends CommandMessage
 */
export declare class ExecuteApplicationActionCommandMessage extends CommandMessage {
    readonly type: string;
    private applicationName;
    private pageName?;
    private action;
    /**
     * Creates an instance of the ExecuteApplicationActionCommandMessage class.
     * @param {string} applicationName The name of the application
     */
    constructor(applicationName: string, action: string);
    /**
     * Gets the application name
     * @returns {string} The name of the application
     */
    getApplicationName(): string;
    /**
     * Sets the application name
     * @param {string} The name of the application
     * @returns {this} The updated instance of the ExecuteApplicationActionCommandMessage.
     */
    setApplicationName(applicationName: string): this;
    /**
     * Gets the page name
     * @returns {string} The name of the page
     */
    getPageName(): string;
    /**
     * Sets the page name
     * @param {string} The name of the page
     * @returns {this} The updated instance of the ExecuteApplicationActionCommandMessage.
     */
    setPageName(pageName: string): this;
    /**
     * Gets the action
     * @returns {string} The action
     */
    getAction(): string;
    /**
     * Sets the action
     * @param {string} The action
     * @returns {this} The updated instance of the ExecuteApplicationActionCommandMessage.
     */
    setAction(action: string): this;
}
