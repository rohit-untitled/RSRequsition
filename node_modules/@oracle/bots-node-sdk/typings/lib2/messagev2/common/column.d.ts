import { Field, ChannelCustomizable } from '../internal';
/**
 * Represents a column
 * @extends ChannelCustomizable
 */
export declare class Column extends ChannelCustomizable {
    private id?;
    private fields;
    private verticalAlignment?;
    private width?;
    /**
     * Deserialize nested object properties into corresponding class instances
     */
    deserializeNestedProperties(): void;
    /**
     * Creates an instance of the Column class.
     * @param {Field[]} [fields] The list of fields in the column.
     */
    constructor(fields?: Field[]);
    /**
     * Gets the ID of the column.
     * @returns {string} The ID of the column.
     */
    getId(): string;
    /**
     * Sets the ID of the column.
     * @param {string} id The ID to set.
     * @returns {Column} The updated instance of the Column.
     */
    setId(id: string): this;
    /**
     * Gets the list of fields in the column.
     * @returns {Field[]} The list of fields in the column.
     */
    getFields(): Field[];
    /**
     * Sets the fields of the column.
     * @param {Field[]} fields The fields to set.
     * @returns {Column} The updated instance of the Column.
     */
    setFields(fields: Field[]): this;
    /**
     * Adds a field to the column.
     * @param {Field} field The field to add.
     * @returns {Column} The updated instance of the Column.
     */
    addField(field: Field): this;
    /**
     * Gets the width of the column.
     * @returns {ColumnWidth} The width.
     */
    getWidth(): ColumnWidth;
    /**
     * Sets the width of the column.
     * @param {string} width The width to set.
     * @returns {Column} The updated instance of the Column.
     */
    setWidth(width: ColumnWidth): this;
    /**
     * Gets the vertical alignment of the column.
     * @returns {VerticalAlignment} The alignment.
     */
    getVerticalAlignment(): VerticalAlignment;
    /**
     * Sets the vertical alignment of the column.
     * @param {string} verticalAlignment The alignment to set.
     * @returns {Column} The updated instance of the Column.
     */
    setVerticalAlignment(verticalAlignment: VerticalAlignment): this;
}
/**
 * Represents the column width
 */
export declare enum ColumnWidth {
    auto = "auto",
    stretch = "stretch"
}
/**
 * Represents the vertical column aligment
 */
export declare enum VerticalAlignment {
    top = "top",
    center = "center",
    bottom = "bottom"
}
